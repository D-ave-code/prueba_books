version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
#    ports:
#      - 5433:5432
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  tracing:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 14258:14258
  books-service:
    image: d4vecode/app-books:1.0.0
    environment:
      DB_CONNECTION_USER: postgres
      DB_CONNECTION_PASSWORD: postgres
      DB_CONNECTION_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      #SERVER_PORT: 7001
      AUTHOR_URL: http://proxy/app2
      TRACING_HOST: tracing
    depends_on:
      - postgres-sql
      - traefik
    deploy:
      replicas: 3

    labels:
      - "traefik.http.routers.books.rule=PathPrefix(`/app1`)"
      - "traefik.http.middlewares.books.stripprefix.prefixes=/app1"
      - "traefik.http.routers.books.middlewares=books"
  authors-service:
    image: d4vecode/app-authors:1.0.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      #SERVER_PORT: 8080
    depends_on:
      - postgres-sql
      - traefik
    deploy:
      replicas: 2

    labels:
      - "traefik.http.routers.web-service.rule=Host(`app.localhost`)"
      - "traefik.http.services.web-service.loadbalancer.server.port=7050"

